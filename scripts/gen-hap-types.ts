import * as fs from 'fs';
import * as path from 'path';
import { Characteristic, Service } from 'hap-nodejs';

/** Generate Service Types */

let ServicesTypes = [
  'export const ServicesTypes = {',
] as any;

let Services = [
  'export const Service = {',
] as any;

for (const [name, value] of Object.entries(Service)) {
  if (value.UUID) {
    ServicesTypes.push(`  '${value.UUID}': '${name}',`);
    Services.push(`  ${name}: '${value.UUID}',`);
  }
}

ServicesTypes.push('};\n\n');
ServicesTypes = ServicesTypes.join('\n');

Services.push('};\n\n');
Services = Services.join('\n');

/** Generate Characteristic Types */

let CharacteristicsTypes = [
  'export const CharacteristicsTypes = {',
] as any;

let Characteristics = [
  'export const Characteristic = {',
] as any;

for (const [name, value] of Object.entries(Characteristic)) {
  if (value.UUID) {
    CharacteristicsTypes.push(`  '${value.UUID}': '${name}',`);
    Characteristics.push(`  ${name}: '${value.UUID}',`);
  }
}

CharacteristicsTypes.push('};\n\n');
CharacteristicsTypes = CharacteristicsTypes.join('\n');

Characteristics.push('};\n');
Characteristics = Characteristics.join('\n');

const out = '/* This file is automatically generated */\n\n' + ServicesTypes + Services + CharacteristicsTypes + Characteristics;

fs.writeFileSync(path.resolve(__dirname, '../src/hap-types.ts'), out, 'utf8');
